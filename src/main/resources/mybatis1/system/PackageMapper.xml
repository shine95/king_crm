<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PackageMapper">

    <!--表名 -->
    <sql id="tableName">
		DB_PACKAGE
	</sql>

    <resultMap type="com.fh.entity.system.Pack" id="packResultMap">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
    </resultMap>

    <!-- 字段 -->
    <sql id="Field">
		ID,	
		NAME,	
		REMARK,	
		MODEFIER,	
		CREATE_TIME,	
		CREATOR,	
		UPDATE_TIME,
		STATUS
	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
		#{ID},	
		#{NAME},	
		#{REMARK},	
		#{MODEFIER},	
		#{CREATE_TIME},	
		#{CREATOR},	
		#{UPDATE_TIME},
		#{STATUS}
	</sql>

    <!-- 列出此组下的包名 -->
    <select id="listAllPackByPId" resultMap="packResultMap">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
    </select>

    <!-- 新增-->
    <insert id="save" parameterType="pd">
        insert into
        <include refid="tableName"></include>
        (
        ID,
        NAME,
        REMARK,
        MODEFIER,
        CREATE_TIME,
        CREATOR,
        UPDATE_TIME,
        STATUS
        ) values (
        #{ID},
        #{NAME},
        #{REMARK},
        #{MODEFIER},
        NOW(),
        #{CREATOR},
        #{UPDATE_TIME},
        #{STATUS}
        )
    </insert>

    <!-- 删除-->
    <delete id="delete" parameterType="pd">
        delete from
        <include refid="tableName"></include>
        where
        ID = #{ID}
    </delete>

    <!-- 修改 -->
    <update id="edit" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        ID = #{ID},
        NAME = #{NAME},
        REMARK = #{REMARK},
        MODEFIER = #{MODEFIER},
        CREATE_TIME = #{CREATE_TIME},
        CREATOR = #{CREATOR},
        UPDATE_TIME = now(),
        STATUS = #{STATUS}
        where
        ID = #{ID}
    </update>

    <!-- 通过ID获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where
        ID = #{ID}
    </select>

    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where 1=1
        <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            STATUS LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
    </select>

    <!-- 列表(全部) -->
    <select id="listAll" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
    </select>

    <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- shine845196784qq(千帆i) -->
</mapper>